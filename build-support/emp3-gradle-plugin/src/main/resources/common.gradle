buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
    }
}

apply plugin: io.spring.gradle.dependencymanagement.DependencyManagementPlugin


ext {
    versionFile = new File(project.rootDir, 'gradle.properties')

    version_nasa_worldwind_sdk = "0.6.0"
    version_cmapi              = "0.0.7"
    version_renderer           = "0.1.30"
    version_mirrorcache        = "0.1.0"

    android_minSdkVersion     = 19
    android_targetSdkVersion  = 23
    android_compileSdkVersion = 23
    android_buildToolsVersion = "25.0.2"
}

group = "mil.army.missioncommand"

repositories {
    mavenLocal()
    jcenter()
    maven {
        url "file://${System.env['ANDROID_HOME']}/extras/android/m2repository"
    }
    /*maven {
        url "file://${System.env['ANDROID_HOME']}/extras/google/m2repository"
    }*/
//    maven {
//        url = "https://nexus.di2e.net/nexus/content/repositories/releases/"
//        credentials {
//            username empUsername
//            password empPassword
//        }
//    }
    maven {
        url "https://dl.bintray.com/missioncommand/maven/"
    }
    maven {
        url "https://oss.jfrog.org/artifactory/libs-snapshot"
    }
}

dependencyManagement {
    dependencies {
        // MISSION_COMMAND-related
        //dependency ("org.cmapi.primitives:common-map-geospatial-notation:${version_cmapi}")
        dependency ("mil.army.missioncommand:mil-sym-android-renderer:${version_renderer}")
        dependency ("mil.army.missioncommand:mirrorcache-api:${version_mirrorcache}")
        dependency ("mil.army.missioncommand:mirrorcache-impl-core:${version_mirrorcache}")
        dependency ("mil.army.missioncommand:mirrorcache-impl-transport-ws-nv:${version_mirrorcache}")

        // ANDROID-related
        dependency ("com.android.support:multidex:1.0.1")
        dependency ("com.android.support:appcompat-v7:23.2.1")
        dependency ("com.android.support:support-annotations:23.1.1")
        dependency ("com.android.support:design:23.2.1")

        // OTHER
        dependency ("com.eclipsesource.minimal-json:minimal-json:0.9.4")

        // TEST-related
        dependency ("junit:junit:4.12")
        dependency ("org.mockito:mockito-core:2.8.9")
        dependency ("org.powermock:powermock-api-mockito:1.6.2")
        dependency ("org.powermock:powermock-module-junit4:1.6.2")
        dependency ("org.robolectric:robolectric:3.3.2")
    }
}

task wrapper(type: Wrapper, description: "Generates gradlew[.bat] scripts") {
    gradleVersion = '3.4.1'
}

if (JavaVersion.current().isJava8Compatible()) { // disable lint for java8
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

task nextMinorVersion(description: "Increments the version property in ${versionFile}.") {
    doFirst {
        nextMinorVersion()
    }
}

void nextMinorVersion() {
    def version = readVersion()

    def octet = version['version'].split("\\.|-")

    def versionMajor = octet[0] as int
    def versionMinor = octet[1] as int
    def versionPatch = 0

    versionMinor++

    if (project.hasProperty('isSnapshot')) {
        version['version'] = "${versionMajor}.${versionMinor}.${versionPatch}-SNAPSHOT".toString()
    } else {
        version['version'] = "${versionMajor}.${versionMinor}.${versionPatch}".toString()
    }

    println "Setting version to: ${version['version']}"

    def stream = new FileOutputStream(versionFile)
    try {
        version.store(stream, null)
    } finally {
        stream.close()
    }
}

Properties readVersion() {
    def version = new Properties()
    def stream
    try {
        stream = new FileInputStream(versionFile)
        version.load(stream)
    } catch (FileNotFoundException e) {
        e.printStackTrace();
    } finally {
        if (stream != null) stream.close()
    }
    return version
}
