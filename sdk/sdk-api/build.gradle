apply plugin: 'java'

apply plugin: 'nebula.maven-base-publish'
apply plugin: 'nebula.maven-nebula-publish'
apply plugin: 'nebula.source-jar'
apply plugin: 'nebula.javadoc-jar'

sourceCompatibility = rootProject.sourceCompatibility
targetCompatibility = rootProject.targetCompatibility

configurations {
    doc {
        transitive false
    }
}

dependencies {
    implementation project (":google-maps-android-cmgn")
    implementation         ("${cmapi_group_name}:${cmapi_jvm_artifact_name}:${version_cmapi}")
    apiElements            ("${cmapi_group_name}:${cmapi_jvm_artifact_name}:${version_cmapi}")
    implementation project (":geolib")
    implementation         ("com.eclipsesource.minimal-json:minimal-json:0.9.4")
    implementation         ("net.sf.geographiclib:GeographicLib-Java:1.49")
    implementation         ("mil.army.missioncommand:mirrorcache-api")
    compileOnly            (group: 'mil.army.missioncommand', name: 'mil-sym-android-renderer', ext: 'jar') { transitive = true }
    compileOnly files      ("${System.getenv("ANDROID_HOME")}/platforms/android-${android_compileSdkVersion}/android.jar")
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class"
}

javadoc {
    options {
        failOnError = true

        encoding "UTF-8"
        docEncoding "UTF-8"
        charSet "UTF-8"
        linkSource true

        memberLevel = JavadocMemberLevel.PROTECTED

        logging.captureStandardError LogLevel.INFO
        logging.captureStandardOutput LogLevel.INFO

        exclude '**/core/**/*.java'
        exclude '**/*.MF'
        exclude 'com/**/*.java'

        title = "EMP V3 Android SDK $project.version"
        source configurations.doc.collect { zipTree(it) }
    }
}

publishing.publications {
    nebula(MavenPublication) {
        pom.withXml {
            configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
                if (dep.moduleName.equals("google-maps-android-cmgn")) {
                    asNode().dependencies[0].dependency?.scope[0]?.value = 'compile'
                }
            }
        }
    }
}
